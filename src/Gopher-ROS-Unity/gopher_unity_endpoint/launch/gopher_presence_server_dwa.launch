<launch>

  <!-- Arguments -->
  <arg name="tcp_ip" default="130.215.215.76"/>
  <arg name="tcp_port" default="10000"/>

  <arg name="world_name" default="hospital_map"/>
  <arg name="robot_name" default="gopher"/>

  <arg name="pose_x" default="-0.871"/>
  <arg name="pose_y" default="-8.046"/>
  <arg name="pose_yaw" default="0.021"/>
  
  <!-- <arg name="soc_nav" default="false"/> -->

  <arg name="evaluation" default="true"/>

  <!-- Connection -->
  <node name="server_endpoint" pkg="ros_tcp_endpoint" type="default_server_endpoint.py" 
        args="--wait" output="screen" respawn="true">
    <param name="tcp_ip" type="string" value="$(arg tcp_ip)"/>
    <param name="tcp_port" type="int" value="$(arg tcp_port)"/>
  </node>

  <!-- Load map -->
  <node name="map_server" pkg="map_server" type="map_server" 
        args="$(find gopher_navigation)/maps/$(arg world_name).yaml">
    <param name="frame_id" value="map" />
  </node>

  <!-- Load robot description -->
  <param name ="/use_sim_time" value="true"/>
  <group ns="$(arg robot_name)">
    <arg name="with_arms" default="false"/>
    <param name="robot_description" 
           command="$(find xacro)/xacro
                    $(find gopher_description)/robots/gopher.xacro
                    robot_name:=$(arg robot_name) with_arms:=$(arg with_arms)" />
    
    <!-- Load navigation package -->
    <param name="amcl/initial_pose_x" value="$(arg pose_x)" />
    <param name="amcl/initial_pose_y" value="$(arg pose_y)" />
    <param name="amcl/initial_pose_a" value="$(arg pose_yaw)" />
    <include file="$(find gopher_navigation)/launch/gopher_amcl_dwa.launch">
      <arg name="robot_name" value="$(arg robot_name)"/>
    </include>
  </group>



  <!--- Run constant velocity prediction node -->
  <node name="constant_velocity_prediction" pkg="people_prediction" type="constant_velocity_prediction" />

  <group if="$(eval evaluation == true)">
    <node name="social_distance_node" pkg="gopher_navigation" type="social_distance.py" output="screen" />
    <node name="path_length_node" pkg="gopher_navigation" type="path_length.py" output="screen" />
  </group>

  <!-- Transform compressed image to raw image in order to view it in Rviz
  <node name="main_cam_republish" type="republish" pkg="image_transport" output="screen" 
        args="compressed in:=/main_cam/color/image_raw raw out:=/main_cam/color/image_raw" />
  <node name="right_arm_cam_republish" type="republish" pkg="image_transport" output="screen" 
        args="compressed in:=/right_arm_cam/color/image_raw raw out:=/right_arm_cam/color/image_raw" />
  <node name="left_arm_cam_republish" type="republish" pkg="image_transport" output="screen" 
        args="compressed in:=/left_arm_cam/color/image_raw raw out:=/left_arm_cam/color/image_raw" />  -->


  <!-- Start RViz -->
  <arg name="rviz_config" value="$(find gopher_unity_endpoint)/rviz/gopher_rviz_config.rviz"/>
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rviz_config)"/> 

</launch>
