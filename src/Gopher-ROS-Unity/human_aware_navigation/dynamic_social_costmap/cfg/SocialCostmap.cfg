#!/usr/bin/env python
PACKAGE = "dynamic_social_costmap"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("cutoff_amplitude", double_t, 0, "amplitude below which gaussian cost is cut off to 0", 10.0, 0, 255)
gen.add("amplitude_multiplicator", double_t, 0, "cost multiplication factor for gaussian amplitude", 225, 0, 255)
gen.add("variance_x", double_t, 0, "gaussian variance in persons x direction (front)", 0.25, 0, 2.0)
gen.add("variance_y", double_t, 0, "gaussian variance in persons y direction (sideways)", 0.2, 0, 2.0)
gen.add("offset_x", double_t, 0, "offset of gaussian function in person's x direction (front)", 0.2, -1.0, 1.0)
gen.add("offset_y", double_t, 0, "offset of gaussian function in person's y direction (sideways)", 0.0, -1.0, 1.0)
gen.add("forbidden_radius", double_t, 0, "radius of area around the human with untraversible cost value", 0.3, 0, 1.0)
#time factors for adjusting the cost functions over time. This allows for example for an increased uncertainty for the
#prediction with time (decaying amplitude but increasing variance in both directions)
gen.add("amplitude_time_factor", double_t, 0, "fraction of how much the amplitude changes with time", 0.0, -1.0, 1.0)
gen.add("variance_time_factor", double_t, 0, "fraction of how much the variance changes with time", 0.0, -1.0, 1.0)
gen.add("forbidden_radius_time_factor", double_t, 0, "fraction of how much the forbidden radius changes with time", 0.0, -1.0, 1.0)
gen.add("interpolation_steps", int_t, 0, "amount of interpolation steps between two poses to capture the trajectory", 3, 0, 10)

exit(gen.generate(PACKAGE, "dynamic_social_costmap", "SocialCostmap"))

